library(plyr) # For data manipulation
library(tidyverse) # For data manipulation
library(mctoolsr) # For microbial analyses
library(vegan) # For multivariate stats
library(RColorBrewer) # For colors
library(microseq) # For fastas
library(car) # For stats
library(MASS) # For stats
library(FSA) # For SE
library(lme4) # For LMER
library(emmeans) # For TukeyHSD
library(multcomp) # For cld
library(lmerTest) # For Sattherwaite df
library(afex) # For alternative mixed model
library(ggh4x) # For plots
library(ggrepel) # For plot text
library(cowplot) # For multipanel
library(phyloseq) # For networks
library(SpiecEasi) # For networks
library(igraph) # For networks
library(rnetcarto) # For networks
library(writexl) # Export
library(naniar) # For NA management
library(pheatmap) # For heatmaps
library(iCAMP) # NTI
library(ape) # Phylogenetics
library(phyloseq) # microbial analyses, can handle trees
library(picante) # Trees
library(conditionz)
library(taxize) # version 0.9.100.1 from archive
library(readxl)
# Repo Directory
setwd("~/Documents/GitHub/SunflowerG/")
# Functions
`%notin%` <- Negate(`%in%`)
find_hull <- function(df) df[chull(df$Axis01, df$Axis02),]
source("code/effectSize.R")
source("code/run_taxa_null_model.R")
source("code/run_div_null_model.R")
source("code/run_sclero_regressions.R")
MyDiamond <- function(coords, v=NULL, params) {
vertex.color <- params("vertex", "color")
if (length(vertex.color) != 1 && !is.null(v)) {
vertex.color <- vertex.color[v]
}
vertex.frame.color <- params("vertex", "frame.color")
if (length(vertex.frame.color) != 1 && !is.null(v)) {
vertex.frame.color <- vertex.frame.color[v]
}
vertex.size <- 1/200 * params("vertex", "size")
if (length(vertex.size) != 1 && !is.null(v)) {
vertex.size <- vertex.size[v]
}
symbols(x=coords[,1], y=coords[,2], bg=vertex.color, fg=vertex.frame.color,
stars=cbind(vertex.size, vertex.size, vertex.size, vertex.size),
add=TRUE, inches=FALSE)
}
add_shape("diamond", clip=shapes("circle")$clip,
plot=MyDiamond, parameters=list(vertex.frame.color="white",
vertex.frame.width=1))
mytriangle <- function(coords, v=NULL, params) {
vertex.color <- params("vertex", "color")
if (length(vertex.color) != 1 && !is.null(v)) {
vertex.color <- vertex.color[v]
}
vertex.size <- 1/200 * params("vertex", "size")
if (length(vertex.size) != 1 && !is.null(v)) {
vertex.size <- vertex.size[v]
}
symbols(x=coords[,1], y=coords[,2], bg=vertex.color,
stars=cbind(vertex.size, vertex.size, vertex.size),
add=TRUE, inches=FALSE)
}
add_shape("triangle", clip=shapes("circle")$clip,
plot=mytriangle)
#### _Start here ####
input_n3_16S <- readRDS("data/input_filt_16S_noSing.rds")
input_n3_ITS <- readRDS("data/input_filt_ITS_noSing.rds")
input_n3_16S$map_loaded$rich <- specnumber(input_n3_16S$data_loaded,
MARGIN = 2)
input_n3_16S$map_loaded$shannon <- vegan::diversity(input_n3_16S$data_loaded,
index = "shannon",
MARGIN = 2)
input_n3_ITS$map_loaded$rich <- specnumber(input_n3_ITS$data_loaded,
MARGIN = 2)
input_n3_ITS$map_loaded$shannon <- vegan::diversity(input_n3_ITS$data_loaded,
index = "shannon",
MARGIN = 2)
#### _Taxa ####
# Reviewer says paper is lacking standard taxonomic graphs
# Make Figure S3 to present the top prokaryotic phyla and top fungal classes
tax_sum_phylum_pro <- summarize_taxonomy(input = input_n3_16S,
level = 2,
report_higher_tax = F)
View(tax_sum_phylum_pro)
View(input_n3_16S$map_loaded)
plot_taxa_bars(tax_table = tax_sum_phylum_pro,
metadata_map = input_filt_rare$map_loaded,
type_header = "pedigree",
num_taxa = 12,
data_only = F)
plot_taxa_bars(tax_table = tax_sum_phylum_pro,
metadata_map = input_n3_16S$map_loaded,
type_header = "pedigree",
num_taxa = 12,
data_only = F)
bars_phyla <- plot_taxa_bars(tax_table = tax_sum_phylum_pro,
metadata_map = input_n3_16S$map_loaded,
type_header = "sampleID",
num_taxa = 13,
data_only = T) %>%
left_join(., input_filt_rare$map_loaded, by = c("group_by" = "sampleID"))
bars_phyla <- plot_taxa_bars(tax_table = tax_sum_phylum_pro,
metadata_map = input_n3_16S$map_loaded,
type_header = "sampleID",
num_taxa = 13,
data_only = T) %>%
left_join(., input_n3_16S$map_loaded, by = c("group_by" = "sampleID"))
top_phyla <- bars_phyla %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
filter(taxon != "Other") %>%
filter(taxon != "NA") %>%
arrange(-mean) %>%
mutate(taxon = as.character(taxon))
View(top_phyla)
bars_phyla <- bars_phyla %>%
mutate(taxon = factor(taxon,
levels = c("Other", "NA", rev(top_phyla$taxon))))
ggplot(bars_phyla, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, linewidth = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Genus") +
scale_fill_manual(values = c("grey75", "grey90", brewer.pal(12, "Paired")[12:1])) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ pedigree, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
strip.text = element_text(size = 7),
strip.background = element_rect(linewidth = 0.5),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.key.size = unit(0.4, "cm"))
ggplot(bars_phyla, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, linewidth = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Genus") +
scale_fill_manual(values = c("grey75", "grey90", brewer.pal(12, "Paired")[12:1])) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ pedigree, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
strip.text = element_text(size = 7, angle = 45, hjust = 1),
strip.background = element_blank(),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.key.size = unit(0.4, "cm"),
panel.spacing.x = unit(rep(0, 94), "lines"))
ggplot(bars_phyla, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, linewidth = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Phylum") +
scale_fill_manual(values = c("grey75", "grey90", brewer.pal(12, "Paired")[12:1])) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ pedigree, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
strip.text = element_text(size = 7, angle = 90),
strip.background = element_blank(),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.key.size = unit(0.4, "cm"),
panel.spacing.x = unit(rep(0, 94), "lines"))
ggplot(bars_phyla, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, linewidth = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Phylum") +
scale_fill_manual(values = c("grey75", "grey90", brewer.pal(12, "Paired")[12:1])) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ pedigree, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
strip.text = element_text(size = 7, angle = 90, hjust = 0),
strip.background = element_blank(),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.key.size = unit(0.4, "cm"),
panel.spacing.x = unit(rep(1, 94), "lines"))
ggplot(bars_phyla, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, linewidth = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Phylum") +
scale_fill_manual(values = c("grey75", "grey90", brewer.pal(12, "Paired")[12:1])) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ pedigree, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
strip.text = element_text(size = 7, angle = 90),
strip.background = element_blank(),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.key.size = unit(0.4, "cm"),
panel.spacing.x = unit(rep(0.1, 94), "lines"))
ggplot(bars_phyla, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, linewidth = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Phylum") +
scale_fill_manual(values = c("grey75", "grey90", brewer.pal(12, "Paired")[12:1])) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ pedigree, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
strip.text = element_text(size = 7, angle = 90, hjust = 0),
strip.background = element_blank(),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.key.size = unit(0.4, "cm"),
panel.spacing.x = unit(rep(0.1, 94), "lines"))
ggplot(bars_phyla, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, linewidth = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Phylum") +
scale_fill_manual(values = c("grey75", "grey90", brewer.pal(12, "Paired")[12:1])) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ pedigree, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
strip.text = element_text(size = 7, angle = 90, hjust = 0, margin = margin(b = 0)),
strip.background = element_blank(),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.key.size = unit(0.4, "cm"),
panel.spacing.x = unit(rep(0.1, 94), "lines"))
s3 <- ggplot(bars_phyla, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, linewidth = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Phylum") +
scale_fill_manual(values = c("grey75", "grey90", brewer.pal(12, "Paired")[12:1])) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ pedigree, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
strip.text = element_text(size = 7, angle = 90, hjust = 0, margin = margin(b = 0)),
strip.background = element_blank(),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.key.size = unit(0.4, "cm"),
panel.spacing.x = unit(rep(0.1, 94), "lines"))
pdf("FinalFigs/FigureS3.pdf", width = 8, height = 6)
s3
dev.off()
pdf("FinalFigs/FigureS3.pdf", width = 9, height = 6)
s3
dev.off()
s3 <- ggplot(bars_phyla, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, linewidth = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Phylum") +
scale_fill_manual(values = c("grey75", "grey90", brewer.pal(12, "Paired")[12:1])) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ pedigree, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
strip.text = element_text(size = 6, angle = 90, hjust = 0, margin = margin(b = -5)),
strip.background = element_blank(),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.key.size = unit(0.4, "cm"),
panel.spacing.x = unit(rep(0.1, 94), "lines"))
pdf("FinalFigs/FigureS3.pdf", width = 9, height = 6)
s3
dev.off()
s3 <- ggplot(bars_phyla, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, linewidth = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Phylum") +
scale_fill_manual(values = c("grey75", "grey90", brewer.pal(12, "Paired")[12:1])) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ pedigree, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
strip.text = element_text(size = 5, angle = 90, hjust = 0, margin = margin(b = 0)),
strip.background = element_blank(),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.key.size = unit(0.4, "cm"),
panel.spacing.x = unit(rep(0.1, 94), "lines"))
pdf("FinalFigs/FigureS3.pdf", width = 9, height = 6)
s3
dev.off()
png("FinalFigs/FigureS3.png", width = 9, height = 6, units = "in", res = 300)
s3
dev.off()
# Fungal classes
tax_sum_class <- summarize_taxonomy(input = input_n3_ITS,
level = 3,
report_higher_tax = F)
View(tax_sum_class)
# Fungal classes
tax_sum_class <- summarize_taxonomy(input = input_n3_ITS,
level = 2,
report_higher_tax = F)
View(tax_sum_class)
# Fungal classes
tax_sum_class <- summarize_taxonomy(input = input_n3_ITS,
level = 3,
report_higher_tax = F)
# Fungal classes
tax_sum_class <- summarize_taxonomy(input = input_n3_ITS,
level = 3,
report_higher_tax = F)
bars_class <- plot_taxa_bars(tax_table = tax_sum_phylum_pro,
metadata_map = input_n3_ITS$map_loaded,
type_header = "sampleID",
num_taxa = 13,
data_only = T) %>%
left_join(., input_n3_ITS$map_loaded, by = c("group_by" = "sampleID"))
top_class <- bars_class %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
filter(taxon != "Other") %>%
filter(taxon != "NA") %>%
arrange(-mean) %>%
mutate(taxon = as.character(taxon))
View(top_class)
# Fungal classes
tax_sum_class <- summarize_taxonomy(input = input_n3_ITS,
level = 3,
report_higher_tax = F)
bars_class <- plot_taxa_bars(tax_table = tax_sum_class,
metadata_map = input_n3_ITS$map_loaded,
type_header = "sampleID",
num_taxa = 13,
data_only = T) %>%
left_join(., input_n3_ITS$map_loaded, by = c("group_by" = "sampleID"))
top_class <- bars_class %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
filter(taxon != "Other") %>%
filter(taxon != "NA") %>%
arrange(-mean) %>%
mutate(taxon = as.character(taxon))
bars_class <- bars_class %>%
mutate(taxon = factor(taxon,
levels = c("Other", "NA", rev(top_class$taxon))))
View(top_class)
s4 <- ggplot(bars_class, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, linewidth = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Phylum") +
scale_fill_manual(values = c("grey75", "grey90", brewer.pal(12, "Paired")[12:1])) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ pedigree, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
strip.text = element_text(size = 5, angle = 90, hjust = 0, margin = margin(b = 0)),
strip.background = element_blank(),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 0, unit = "pt"),
legend.key.size = unit(0.4, "cm"),
panel.spacing.x = unit(rep(0.1, 94), "lines"))
pdf("FinalFigs/FigureS4.pdf", width = 9, height = 6)
s4
dev.off()
png("FinalFigs/FigureS4.png", width = 9, height = 6, units = "in", res = 300)
s4
dev.off()
#saveRDS(NTI, "NTI.rds")
NTI <- readRDS("data/NTI.rds") %>%
rownames_to_column(var = "sampleID")
View(NTI)
#### 9. NTI ####
# Look at Nearest Taxon Index to infer assembly mechanisms
# Just do for 16S as ITS trees are questionable
# Hypothesis is that genotype effects lead to deterministic assembly
# Read in and filter repset fasta
nrow(input_n3_16S$taxonomy_loaded)
cs15 <- as.data.frame(rowSums(input_n3_16S$data_loaded)) %>%
set_names("Reads") %>%
filter(Reads >= 15)
input_15 <- filter_taxa_from_input(input_n3_16S,
taxa_IDs_to_keep = rownames(cs15))
nrow(input_15$taxonomy_loaded) # 10522
View(input_15$taxonomy_loaded)
# Merge to the rest of the metadata
input_15$map_loaded <- input_15$map_loaded %>%
left_join(., NTI, by = "sampleID")
rownames(input_n3_16S$map_loaded)
rownames(input_15$map_loaded)
rownames(input_15$map_loaded) <- input_15$map_loaded$sampleID
rownames(input_15$map_loaded)
# Get descriptive info
min(input_15$map_loaded$NTI) # -4.186063
max(input_15$map_loaded$NTI) # 5.074002
mean(input_15$map_loaded$NTI) # 1.421827
se(input_15$map_loaded$NTI) # 0.07257843
sd(input_15$map_loaded$NTI) # 1.392296
# Test and plot versus Sclerotinia, chlorophyll, richness, shannon
summary(lm(NTI ~ DiseaseIncidence, data = input_15$map_loaded))
summary(lm(NTI ~ `Chlorophyll concentration`, data = input_15$map_loaded))
summary(lm(NTI ~ rich, data = input_15$map_loaded))
summary(lm(NTI ~ shannon, data = input_15$map_loaded))
plot(input_15$map_loaded$DiseaseIncidence, input_15$map_loaded$NTI)
plot(input_15$map_loaded$`Chlorophyll concentration`, input_15$map_loaded$NTI)
plot(input_15$map_loaded$rich, input_15$map_loaded$NTI)
plot(input_15$map_loaded$shannon, input_15$map_loaded$NTI)
#### 10. Sloan ####
# Run Sloane Neutral Model to complement the NTI analyses on assembly mechanisms
# Run with pctax package, use github version for plot editing
#devtools::install_github("Asa12138/pctax", force = TRUE)
library(pctax)
# 16S
ncm_res <- ncm(input_15$data_loaded, model = "nls")
table(ncm_res$ncm_data$group) # 9884 above, 364 below, 274 in
9884/10522*100
364/10522*100
274/10522*100
# ITS
nrow(input_n3_ITS$taxonomy_loaded) # 1425
cs15_ITS <- as.data.frame(rowSums(input_n3_ITS$data_loaded)) %>%
set_names("Reads") %>%
filter(Reads >= 15)
input_15_ITS <- filter_taxa_from_input(input_n3_ITS,
taxa_IDs_to_keep = rownames(cs15_ITS))
nrow(input_15_ITS$taxonomy_loaded) # 981
ncm_res_ITS <- ncm(input_15_ITS$data_loaded, model = "nls")
table(ncm_res_ITS$ncm_data$group) # 558 above, 166 below, 257 in
558/981*100
166/981*100
257/981*100
