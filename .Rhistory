library(plyr) # Data manipulation
library(tidyverse) # Data manipulation
library(mctoolsr) # Microbial analyses
library(vegan) # Multivariate stats
library(RColorBrewer) # Colors
library(microseq) # for fastas
library(car) # stats
library(MASS) # stats
library(FSA) # se
library(lme4) # LMER
library(emmeans) # TukeyHSD
library(multcomp) # cld
library(lmerTest) # For Sattherwaite df
library(afex) # For alternative mixed model
library(ggh4x) # For plots
# Repo Directory
setwd("~/Documents/GitHub/SunflowerG/")
# Functions
`%notin%` <- Negate(`%in%`)
source("code/effectSize.R")
#### _Start Here ####
input_filt_16S <- readRDS("data/input_filt_16S.rds")
input_filt_rare_16S <- readRDS("data/input_filt_rare_16S.rds")
input_filt_ITS <- readRDS("data/input_filt_ITS.rds")
input_filt_rare_ITS <- readRDS("data/input_filt_rare_ITS.rds")
# Get pedigrees with 4 replicates (better for analysis) (n = 85)
p4_16S <- as.data.frame(table(input_filt_rare_16S$map_loaded$pedigree)) %>%
filter(Freq == 4)
input_n4_16S <- filter_data(input_filt_rare_16S,
filter_cat = "pedigree",
keep_vals = p4_16S$Var1) # n = 340
# Get pedigrees with 4 replicates and in both datasets (better for analysis) (n = 83)
p4_ITS <- as.data.frame(table(input_filt_rare_ITS$map_loaded$pedigree)) %>%
filter(Freq == 4)
input_n4_ITS <- filter_data(input_filt_rare_ITS,
filter_cat = "pedigree",
keep_vals = p4_ITS$Var1) # n = 372
# Get pedigrees matching 16S dataset
input_n4_ITS <- filter_data(input_n4_16S,
filter_cat = "pedigree",
keep_vals = p4_16S$Var1) # n = 332
# Get pedigrees matching ITS dataset (circle back here after running ITS part)
input_n4_16S <- filter_data(input_n4_ITS,
filter_cat = "pedigree",
keep_vals = p4_ITS$Var1) # n = 332
# Rerun after running 16S part
input_n4_ITS <- filter_data(input_n4_16S,
filter_cat = "pedigree",
keep_vals = p4_16S$Var1) # n = 340
saveRDS(input_n4_16S, "data/input_n4_16S.rds")
saveRDS(input_n4_ITS, "data/input_n4_ITS.rds")
input_n4_16S <- readRDS("data/input_n4_16S.rds")
input_n4_ITS <- readRDS("data/input_n4_ITS.rds")
#### 2. Alpha ####
#### _16S ####
# Get descriptive info
min(input_n4_16S$map_loaded$rich) # 1676
max(input_n4_16S$map_loaded$rich) # 2465
mean(input_n4_16S$map_loaded$rich) # 2096.135
se(input_n4_16S$map_loaded$rich) # 7.629943
plot(as.factor(input_n4_16S$map_loaded$pedigree), input_n4_16S$map_loaded$rich)
plot(input_n4_16S$map_loaded$DiseaseIncidence, input_n4_16S$map_loaded$rich)
# Test and plot
leveneTest(input_n4_16S$map_loaded$rich ~ input_n4_16S$map_loaded$pedigree) # Not homogeneous
leveneTest(input_n4_16S$map_loaded$rich ~ input_n4_16S$map_loaded$rep) # Homogeneous
m <- lmer(rich ~ pedigree + (1|rep), data = input_n4_16S$map_loaded)
summary(m)
Anova(m)
aovtab <- anova(m)
mnull <- lmer(rich ~ 1 + (1|rep), data = input_n4_16S$map_loaded)
anova(mnull, m)
m2 <- mixed(rich ~ pedigree + (1|rep), data = input_n4_16S$map_loaded, method = "PB")
m2
anova(m2)
# No way to get all Sum of Squares for mixed model, so just use two va
m <- aov(rich ~ rep + pedigree, data = input_n4_16S$map_loaded)
summary(m)
Anova(m, type = "II")
h <- eta_sq(m)[2]
h
hist(m$residuals)
shapiro.test(m$residuals)
plot(m$fitted.values, m$residuals)
TukeyHSD(m)
t <- emmeans(object = m, specs = "pedigree") %>%
cld(object = ., adjust = "Tukey", Letters = letters, alpha = 0.05) %>%
mutate(name = "rich",
y = max(input_n4_16S$map_loaded$rich)+
(max(input_n4_16S$map_loaded$rich)-
min(input_n4_16S$map_loaded$rich))/10,
#y = 5650,
Dataset = "16S")
leveneTest(input_n4_16S$map_loaded$shannon ~ input_n4_16S$map_loaded$pedigree) # Homogeneous
leveneTest(input_n4_16S$map_loaded$shannon ~ input_n4_16S$map_loaded$rep) # Homogeneous
m <- lmer(shannon ~ pedigree + (1|rep), data = input_n4_16S$map_loaded)
summary(m)
Anova(m)
anova(m)
mnull <- lmer(shannon ~ 1 + (1|rep), data = input_n4_16S$map_loaded)
anova(mnull, m)
m2 <- mixed(shannon ~ pedigree + (1|rep), data = input_n4_16S$map_loaded, method = "PB")
m2
anova(m2)
# No way to get all Sum of Squares for mixed model, so just use two va
m <- aov(shannon ~ rep + pedigree, data = input_n4_16S$map_loaded)
summary(m)
Anova(m, type = "II")
h1 <- eta_sq(m)[2]
h1
hist(m$residuals)
shapiro.test(m$residuals)
plot(m$fitted.values, m$residuals)
TukeyHSD(m)
t1 <- emmeans(object = m, specs = "pedigree") %>%
cld(object = ., adjust = "Tukey", Letters = letters, alpha = 0.05) %>%
mutate(name = "shannon",
y = max(input_n4_16S$map_loaded$shannon)+
(max(input_n4_16S$map_loaded$shannon)-
min(input_n4_16S$map_loaded$shannon))/10,
#y = 5650,
Dataset = "16S")
label_df_16S <- rbind(t, t1)
alpha_long_16S <- input_filt_rare_16S$map_loaded %>%
pivot_longer(cols = c("rich", "shannon"))
facet_names <- c("rich" = "ASV Richness",
"shannon" = "Shannon Diversity")
g1 <- ggplot(alpha_long_16S, aes(reorder(pedigree, value, mean), value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.75, width = 0.2, pch = 16) +
# geom_text(data = label_df_16S, aes(pedigree, y, label = str_trim(.group)),
#           size = 3, color = "black") +
labs(x = NULL, y = "ASV richness") +
facet_wrap(~ name, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "right",
axis.title.y = element_blank(),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 3, angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 14),
strip.background = element_rect(fill = "white"),
panel.grid = element_blank())
g1
pdf("InitialFigs/Alpha_16S.pdf", width = 8, height = 6)
g1 <- ggplot(alpha_long_16S, aes(reorder(pedigree, value, mean), value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.75, width = 0.2, pch = 16) +
# geom_text(data = label_df_16S, aes(pedigree, y, label = str_trim(.group)),
#           size = 3, color = "black") +
labs(x = NULL, y = "ASV richness") +
facet_wrap(~ name, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "right",
axis.title.y = element_blank(),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 3, angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 14),
strip.background = element_rect(fill = "white"),
panel.grid = element_blank())
g1
dev.off()
#### _ITS ####
# Get descriptive info
min(input_n4_ITS$map_loaded$rich) # 145
# Get pedigrees matching 16S dataset
input_n4_ITS <- filter_data(input_n4_ITS,
filter_cat = "pedigree",
keep_vals = p4_16S$Var1) # n = 340
# Get pedigrees matching ITS dataset (circle back here after running ITS part)
input_n4_16S <- filter_data(input_n4_16S,
filter_cat = "pedigree",
keep_vals = p4_ITS$Var1) # n = 332
saveRDS(input_n4_16S, "data/input_n4_16S.rds")
# Get pedigrees matching 16S dataset
input_n4_ITS <- filter_data(input_n4_ITS,
filter_cat = "pedigree",
keep_vals = p4_16S$Var1) # n = 332
# Rerun after running 16S part
input_n4_ITS <- filter_data(input_n4_ITS,
filter_cat = "pedigree",
keep_vals = unique(input_n4_16S$map_loaded$pedigree)) # n = 332
saveRDS(input_n4_ITS, "data/input_n4_ITS.rds")
input_n4_16S <- readRDS("data/input_n4_16S.rds")
input_n4_ITS <- readRDS("data/input_n4_ITS.rds")
input_n4_ITS <- filter_data(input_filt_rare_ITS,
filter_cat = "pedigree",
keep_vals = p4_ITS$Var1) # n = 372
# Get pedigrees matching 16S dataset
input_n4_ITS <- filter_data(input_n4_ITS,
filter_cat = "pedigree",
keep_vals = p4_16S$Var1) # n = 332
# Rerun after running 16S part
input_n4_ITS <- filter_data(input_n4_ITS,
filter_cat = "pedigree",
keep_vals = unique(input_n4_16S$map_loaded$pedigree)) # n = 332
saveRDS(input_n4_ITS, "data/input_n4_ITS.rds")
input_n4_ITS <- readRDS("data/input_n4_ITS.rds")
#### _ITS ####
# Get descriptive info
min(input_n4_ITS$map_loaded$rich) # 145
max(input_n4_ITS$map_loaded$rich) # 285
mean(input_n4_ITS$map_loaded$rich) # 219.6717
se(input_n4_ITS$map_loaded$rich) # 1.195132
plot(as.factor(input_n4_ITS$map_loaded$pedigree), input_n4_ITS$map_loaded$rich)
plot(input_n4_ITS$map_loaded$DiseaseIncidence, input_n4_ITS$map_loaded$rich)
#### 2. Alpha ####
#### _16S ####
# Get descriptive info
min(input_n4_16S$map_loaded$rich) # 1676
max(input_n4_16S$map_loaded$rich) # 2465
mean(input_n4_16S$map_loaded$rich) # 2096.584
se(input_n4_16S$map_loaded$rich) # 7.755601
# Test and plot
leveneTest(input_n4_ITS$map_loaded$rich ~ input_n4_ITS$map_loaded$pedigree) # Homogeneous
leveneTest(input_n4_ITS$map_loaded$rich ~ input_n4_ITS$map_loaded$rep) # Homogeneous
m <- lmer(rich ~ pedigree + (1|rep), data = input_n4_ITS$map_loaded)
summary(m)
Anova(m)
aovtab <- anova(m)
mnull <- lmer(rich ~ 1 + (1|rep), data = input_n4_ITS$map_loaded)
anova(mnull, m)
m2 <- mixed(rich ~ pedigree + (1|rep), data = input_n4_ITS$map_loaded, method = "PB")
m2
anova(m2)
# No way to get all Sum of Squares for mixed model, so just use two va
m <- aov(rich ~ rep + pedigree, data = input_n4_ITS$map_loaded)
summary(m)
Anova(m, type = "II")
h3 <- eta_sq(m)[2]
h3
hist(m$residuals)
shapiro.test(m$residuals)
plot(m$fitted.values, m$residuals)
TukeyHSD(m)
t <- emmeans(object = m, specs = "pedigree") %>%
cld(object = ., adjust = "Tukey", Letters = letters, alpha = 0.05) %>%
mutate(name = "rich",
y = max(input_n4_ITS$map_loaded$rich)+
(max(input_n4_ITS$map_loaded$rich)-
min(input_n4_ITS$map_loaded$rich))/10,
#y = 5650,
Dataset = "ITS")
leveneTest(input_n4_ITS$map_loaded$shannon ~ input_n4_ITS$map_loaded$pedigree) # Homogeneous
leveneTest(input_n4_ITS$map_loaded$shannon ~ input_n4_ITS$map_loaded$rep) # Homogeneous
m <- lmer(shannon ~ pedigree + (1|rep), data = input_n4_ITS$map_loaded)
summary(m)
Anova(m)
anova(m)
mnull <- lmer(shannon ~ 1 + (1|rep), data = input_n4_ITS$map_loaded)
anova(mnull, m)
m2 <- mixed(shannon ~ pedigree + (1|rep), data = input_n4_ITS$map_loaded, method = "PB")
m2
anova(m2)
# No way to get all Sum of Squares for mixed model, so just use two variables
m <- aov(shannon ~ rep + pedigree, data = input_n4_ITS$map_loaded)
summary(m)
Anova(m, type = "II")
h4 <- eta_sq(m)[2]
h4
hist(m$residuals)
shapiro.test(m$residuals)
plot(m$fitted.values, m$residuals)
TukeyHSD(m)
t1 <- emmeans(object = m, specs = "pedigree") %>%
cld(object = ., adjust = "Tukey", Letters = letters, alpha = 0.05) %>%
mutate(name = "shannon",
y = max(input_n4_ITS$map_loaded$shannon)+
(max(input_n4_ITS$map_loaded$shannon)-
min(input_n4_ITS$map_loaded$shannon))/10,
#y = 5650,
Dataset = "ITS")
label_df_ITS <- rbind(t, t1)
alpha_long_ITS <- input_filt_rare_ITS$map_loaded %>%
pivot_longer(cols = c("rich", "shannon"))
facet_names <- c("rich" = "ASV Richness",
"shannon" = "Shannon Diversity")
pdf("InitialFigs/Alpha_ITS.pdf", width = 8, height = 6)
g2 <- ggplot(alpha_long_ITS, aes(reorder(pedigree, value, mean), value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.75, width = 0.2, pch = 16) +
# geom_text(data = label_df_ITS, aes(pedigree, y, label = str_trim(.group)),
#           size = 3, color = "black") +
labs(x = NULL, y = "ASV richness") +
facet_wrap(~ name, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "right",
axis.title.y = element_blank(),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 3, angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 14),
strip.background = element_rect(fill = "white"),
panel.grid = element_blank())
g2
dev.off()
#### _Combined ####
alpha_long_16S <- alpha_long_16S %>%
mutate(Dataset = "16S") %>%
dplyr::select(pedigree, value, name, Dataset)
alpha_long_ITS <- alpha_long_ITS %>%
mutate(Dataset = "ITS") %>%
dplyr::select(pedigree, value, name, Dataset)
ped_order <- input_n4_16S$map_loaded %>%
group_by(pedigree) %>%
summarise(mean_asv_rich = mean(rich)) %>%
ungroup() %>%
arrange(mean_asv_rich)
alpha_long <- rbind(alpha_long_16S, alpha_long_ITS) %>%
mutate(pedigree = as.factor(pedigree)) %>%
droplevels() %>%
mutate(pedigree = factor(pedigree,
levels = ped_order$pedigree))
View(alpha_long)
nrow(input_n4_16S$map_loaded)
??filterAndTrim
